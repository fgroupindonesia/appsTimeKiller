/*
 *  This is a Supplemental File from the Main Project used
 *  in Java Programming Core Fundamental III
 *  with FGroupIndonesia online & offline sessions.
 *  (c) FGroupIndonesia.com
 */
package frames;

import logic.UIHelper;

/**
 *
 * @author ASUS
 */
public class ShutdownTime extends javax.swing.JDialog {

    int hour;
    int minute=45;
    String hourMinute = null;
    String appName = null;

    MainFrame mainFrameRef;
    
    public void setMainFrame(MainFrame ref){
        mainFrameRef = ref;
    }
    
    public void setAppName(String labelAppName) {
        appName = labelAppName;
        labelWhatTime.setText("What time is this <html><b>" + labelAppName + " app</b></html> will be terminated!");
    }

    /**
     * Creates new form ShutdownTime
     */
    public ShutdownTime(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelWhatTime = new javax.swing.JLabel();
        buttonHourUp = new javax.swing.JButton();
        labelTime = new javax.swing.JLabel();
        labelWhatTime1 = new javax.swing.JLabel();
        buttonHourDown = new javax.swing.JButton();
        buttonMinuteDown = new javax.swing.JButton();
        buttonMinuteUp = new javax.swing.JButton();
        labelWhatTime2 = new javax.swing.JLabel();
        buttonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelWhatTime.setText("What Time do you want this app XXXX will be killed?");
        getContentPane().add(labelWhatTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 29, 345, 31));

        buttonHourUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/up.png"))); // NOI18N
        buttonHourUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHourUpActionPerformed(evt);
            }
        });
        getContentPane().add(buttonHourUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        labelTime.setFont(new java.awt.Font("sansserif", 1, 55)); // NOI18N
        labelTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTime.setText("00:00");
        getContentPane().add(labelTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 78, 350, 114));

        labelWhatTime1.setText("Hour :");
        getContentPane().add(labelWhatTime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 204, 50, 44));

        buttonHourDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/down.png"))); // NOI18N
        buttonHourDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHourDownActionPerformed(evt);
            }
        });
        getContentPane().add(buttonHourDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, -1, -1));

        buttonMinuteDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/down.png"))); // NOI18N
        buttonMinuteDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinuteDownActionPerformed(evt);
            }
        });
        getContentPane().add(buttonMinuteDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, -1, -1));

        buttonMinuteUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/up.png"))); // NOI18N
        buttonMinuteUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinuteUpActionPerformed(evt);
            }
        });
        getContentPane().add(buttonMinuteUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        labelWhatTime2.setText("Minute :");
        getContentPane().add(labelWhatTime2, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 204, 50, 44));

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });
        getContentPane().add(buttonOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 400, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonHourUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHourUpActionPerformed
        hour++;
        refreshTime();
    }//GEN-LAST:event_buttonHourUpActionPerformed

    private void refreshTime() {
        String hourText = UIHelper.numericDigit(hour);
        String minuteText = UIHelper.numericDigit(minute);

        labelTime.setText(hourText + ":" + minuteText);
        hourMinute = hourText + ":" + minuteText + ":00";
    }

    private void buttonHourDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHourDownActionPerformed
        if (hour != 0) {
            hour--;
            refreshTime();
        }
    }//GEN-LAST:event_buttonHourDownActionPerformed

    private void buttonMinuteUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinuteUpActionPerformed
        minute++;
        refreshTime();
    }//GEN-LAST:event_buttonMinuteUpActionPerformed

    private void buttonMinuteDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinuteDownActionPerformed
        if (minute != 0) {
            minute--;
            refreshTime();
        }
    }//GEN-LAST:event_buttonMinuteDownActionPerformed

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        
        try{
        mainFrameRef.setAppTime(appName, hourMinute);
        } catch(Exception ex){
            System.out.println("Error " + ex.getMessage());
            ex.printStackTrace();
        }
        
        this.dispose();
    }//GEN-LAST:event_buttonOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShutdownTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShutdownTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShutdownTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShutdownTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ShutdownTime dialog = new ShutdownTime(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHourDown;
    private javax.swing.JButton buttonHourUp;
    private javax.swing.JButton buttonMinuteDown;
    private javax.swing.JButton buttonMinuteUp;
    private javax.swing.JButton buttonOK;
    private javax.swing.JLabel labelTime;
    private javax.swing.JLabel labelWhatTime;
    private javax.swing.JLabel labelWhatTime1;
    private javax.swing.JLabel labelWhatTime2;
    // End of variables declaration//GEN-END:variables
}
